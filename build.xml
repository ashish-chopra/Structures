<?xml version="1.0" ?>
<project name="Structures - an ADT Journal" default="all" basedir=".">
	<property name="build.home"        value="${basedir}/bin" />
	<property name="docs.home"         value="${basedir}/docs" />
	<property name="src.home"          value="${basedir}/src" />
	<property name="testsrc.home"      value="${basedir}/tests" />
	<property name="lib.home"          value="${basedir}/lib" />


	<!-- ==================== All Target ====================================== -->
	<!--

	  The "all" target is a shortcut for running the "clean" target followed
	  by the "compile" target, then compile "tests" to force a complete recompile.

	-->

	<target name="all" depends="clean,compile,test-compile,run"
	   description="Clean build and dist directories, then compile" />


	<!-- ==================== Clean Target ==================================== -->
	<!--

	  The "clean" target deletes any previous "build" and "dist" directory,
	  so that you can be ensured the application can be built from scratch.

	-->

	<target name="clean"
	   description="Delete old build and dist directories">
		<delete dir="${build.home}"/>
		<delete dir="${docs.home}"/>
	</target>

	<!-- ==================== Compile Target ================================== -->
	<!--

	  The "compile" target transforms source files (from your "src" directory)
	  into object files in the appropriate location in the bin directory.
	  This example assumes that you will be including your classes in an
	  unpacked directory hierarchy under "/bin".

	-->

	<target name="compile"
	   description="Compile Java sources"> 
		<!-- Compile Java classes as necessary -->
		 <mkdir    dir="${build.home}"/>
		<javac srcdir="${src.home}"
	          destdir="${build.home}"
			includeantruntime="false"
	            debug="on"
	      deprecation="on" /> 
	</target>

	
	<!-- ==================== Test-Compile Target ================================== -->
	<!--

	  The "test-compile" target transforms source files (from your "tests" directory)
	  into object files in the appropriate location in the bin directory.
	  This example assumes that you will be including your classes in an
	  unpacked directory hierarchy under "/bin".

	-->
	
	<target name="test-compile" depends="compile"
 	   description="Compile Test Suite"> 
		<!-- Compile Java test classes as necessary -->
		<javac srcdir="${testsrc.home}"
	          destdir="${build.home}"
			includeantruntime="false"
	            debug="on"
	      deprecation="on" /> 
	</target>

	
	<!-- ==================== Run Target ================================== -->
	<!--

	  The "run" target runs the test suite using java task with assertions 
	  enabled. Currently AcceptanceTester is the main test framework 
	  bootstrapper to invoke test cases.
	-->

	<target name="run">
		<java classname="com.AcceptanceTester" 
			classpath="${build.home}" fork="on">
			<assertions>
				<enable package="com"/>
			</assertions>
		</java>
	</target>
	
	<!-- ==================== Docs Target ================================== -->
	<!--
	  The "docs" target generates the javadoc for the classes inside "src" 
	  package.
	-->
	
	<target name="docs">
		<javadoc sourcepath="${src.home}" destdir="${docs.home}"></javadoc>
	</target>
	
</project>